@using Carreno_BugTracker.Helpers
@model IEnumerable<Carreno_BugTracker.Models.Project>

@{ 
    ViewBag.Title = "Projects";
    RolesHelper roleHelper = new RolesHelper();
    ProjectsHelper ProjectHelper = new ProjectsHelper();
}

    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark" style="font-weight: bold; font-size:300%">Projects</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>

<div class="container-fluid">



    <div class="row">
        @if (User.IsInRole("Admin"))
        { 
        <div class="col-12 col-sm-6 col-md-3">
            <a data-toggle="modal" data-target="#newProject" href="" style="color:black">
                <div class="info-box">
                    <span class="info-box-icon bg-blue elevation-1"><i class="fas fa-cog"></i></span>

                    <div class="info-box-content">
                        <span class="info-box-text" style="font-size:large; font-weight:bold">Create Project</span>
                        <span class="info-box-number">

                            <small></small>
                        </span>
                    </div>
                    <!-- /.info-box-content -->
                </div>
            </a>
        </div>
        }
    </div>
    <div class="row">
        <div class="col">
          
            <table class="table table-striped table-bordered">

                <thead>
                    <tr>
                        <th>
                            @Html.DisplayName("Name")
                        </th>
                        <th>
                            @Html.DisplayName("Description")
                        </th>
                
                        <th>
                            @Html.DisplayName("Created")
                        </th>
                        <th>
                            @Html.DisplayName("Updated")
                        </th>
                        <th>
                            @Html.DisplayName("IsArchived")
                        </th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                           
                            <td>
                                @Html.DisplayFor(modelItem => item.Created)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Updated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.isArchived)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |

                                @Html.ActionLink("Create Ticket", "Create", "Tickets", new { projectId = item.Id }, null) |
                                @Html.ActionLink("Assign Users", "AssignUsers", new { projectId = item.Id })

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

